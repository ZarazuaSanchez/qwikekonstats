{"version":3,"sources":["components/SelectIndicator.js","components/SelectYears.js","components/Form.js","components/StatsTable.js","components/Title.js","App.js","serviceWorker.js","index.js"],"names":["SelectIndicator","react_default","a","createElement","name","class","value","Component","Form","carray","require","countries","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","c","id","err","return","Object","values","sort","c1","c2","opItems","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","push","years1","i","Date","getFullYear","d","years2","disabled","selected","onSubmit","this","props","getStats","className","for","components_SelectIndicator","Button","color","React","StatsTable","console","log","kids","stats","table","colSpan","country","children","indicator","nf","Intl","NumberFormat","nrows","keys","reverse","y","format","makeTable","Title","TOKEN","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","countrycode","countryname","indicatorcode","indicatorname","startYear","endYear","error","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","y1","y2","$","res","cjson","rawdata","elem","wrap","_context","prev","preventDefault","target","elements","getJSON","concat","response","fetch","sent","json","date","t0","finish","setState","abrupt","stop","_x","apply","arguments","components_Title","components_Form","components_StatsTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f21de56.chunk.js","sourcesContent":["import React, {Component} from \"react\";\n\nclass SelectIndicator extends Component {\n  render() {\n    return (\n      <select name=\"indicator\" class=\"select-indicator\">\n        <option value=\"NY.GDP.MKTP.CD\">GDP (current US$)</option>\n        <option value=\"MS.MIL.XPND.ZS\">Military expenditure (% of general government expenditure)</option>\n        <option value=\"FP.CPI.TOTL.ZG\">Inflation</option>\n        <option value=\"SP.DYN.LE00.IN\">Life expectancy at birth, total (years)</option>\n        <option value=\"1.0.HCount.1.90usd\">Poverty Headcount ($1.90 a day)</option>\n        <option value=\"SP.POP.TOTL\">Population, total</option>\n        <option value=\"SP.POP.GROW\">Population, growth (annual %)</option>\n        <option value=\"SH.HIV.INCD.ZS\">Prevalence of HIV, total (% of population ages 15-49)</option>\n      </select>\n    );\n\n  }\n}\n\nexport default SelectIndicator;\n","import React, {Component} from \"react\";\n\nclass SelectYears extends Component {\n  render() {\n\n    const years1 = [];\n    const years2 = [];\n\n    var d = new Date();\n\n    for ( var i=d.getFullYear() - 1; i>=1960; i-- ) {\n      years1.push(<option>{i}</option>)\n    }\n\n    years2.push(<option value='' disabled selected>Select end year</option>);\n    for ( i=d.getFullYear() - 1; i>=1960; i-- ) {\n      years2.push(<option>{i}</option>)\n    }\n\n    return(\n      <div class=\"yearsGroup\">\n        <div className=\"form-row\">\n          <label for=\"startYear\">Start Year&nbsp;</label>\n          <select name=\"startYear\" className=\"select-year\">\n            { years1 }\n          </select>\n        </div>\n        <p></p>\n        <div className=\"form-row\">\n          <label for=\"endYear\">End Year&nbsp;</label>\n          <select name=\"endYear\" className=\"select-year\">\n            { years2 }\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SelectYears;\n","import React from \"react\";\nimport SelectIndicator from \"./SelectIndicator\";\nimport SelectYears from \"./SelectYears\";\nimport {Button} from \"reactstrap\";\n\nclass Form extends React.Component {\n  countries() {\n\n    let countriesJSON = require('./countries.json');\n\n    var carray = countriesJSON[1];\n    var countries = {};\n    for( var c of carray ){\n      countries[c.id] = c.name;\n    }\n\n    var sortedCountries = Object.values(countries).sort((c1, c2) => { return (c1.name > c2.name) ? 1 : -1 } );\n\n    const opItems = [];\n\n    for ( c of carray ) {\n      opItems.push(<option value={c.id}>{c.name}</option>);\n    }\n\n    return opItems;\n  }\n\n  years1() {\n\n    const years1 = [];\n\n    var d = new Date();\n\n    for ( var i=d.getFullYear() - 1; i>=1960; i-- ) {\n      years1.push(<option>{i}</option>)\n    }\n\n    return years1;\n  }\n\n  years2() {\n\n    var d = new Date();\n\n    const years2 = [];\n\n    years2.push(<option value='' disabled selected>Select end year</option>);\n    for ( var i=d.getFullYear() - 1; i>=1960; i-- ) {\n      years2.push(<option>{i}</option>)\n    }\n\n    return years2;\n\n  }\n\n  render(){\n    return (\n      <form onSubmit={this.props.getStats}>\n        <div className=\"form-row\">\n          <label for=\"country\">Country&nbsp;</label>\n        </div>\n        <div className=\"form-row\">\n          <select name=\"country\" class=\"select-country\">\n            { this.countries() }\n          </select>\n        </div>\n        <div className=\"form-row\">\n          <label>Indicator&nbsp;</label>\n        </div>\n        <div className=\"form-row\">\n          <SelectIndicator />\n        </div>\n        <div className=\"form-row\">\n          <label for=\"startYear\">Start Year&nbsp;</label>\n        </div>\n        <div className=\"form-row\">\n          <select name=\"startYear\" className=\"select-year yearsGroup\">\n            { this.years1() }\n          </select>\n        </div>\n        <div className=\"form-row\">\n          <label for=\"endYear\">End Year&nbsp;</label>\n        </div>\n        <div className=\"form-row\">\n          <select name=\"endYear\" className=\"select-year yearsGroup\">\n            { this.years2() }\n          </select>\n        </div>\n        <Button color=\"primary\">Get Stats</Button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, {Component} from \"react\";\nimport {Table} from \"reactstrap\";\n\nclass StatsTable extends Component {\n  makeTable() {\n    console.log(\"in makeTable() function\");\n    const stats = this.props.stats;\n    var table = [];\n\n    let kids = undefined;\n    kids = <td colSpan=\"2\"  className=\"country-title\">{this.props.country}</td>;\n    table.push(<tr>{kids}</tr>);\n\n    let children = [];\n    children.push(<td>Year</td>);\n    children.push(<td>{this.props.indicator}</td>);\n    table.push(<tr>{children}</tr>);\n\n    var nf = new Intl.NumberFormat();\n\n    var nrows = 2;\n    var desiredNRows = 15;\n    for( var y of Object.keys(stats).reverse()){\n      let children = [];\n      children.push(<td>{y}</td>);\n      children.push(<td>{nf.format(stats[y])}</td>);\n      table.push(<tr>{children}</tr>);\n      nrows++;\n    }\n\n    if( desiredNRows - nrows < 13){\n      for(var i = nrows; i <= desiredNRows; i++){\n        let children = [];\n        children.push(<td>&nbsp;</td>);\n        children.push(<td>&nbsp;</td>);\n        table.push(<tr>{children}</tr>);\n      }\n    }\n\n    return table;\n  }\n\n  render(){\n    return (\n      <table>{this.makeTable()}</table>\n\n    );\n  }\n};\n\nexport default StatsTable;\n","import React from \"react\";\n\nconst Title = () => (\n  <hgroup>\n    <h1>www.qwikekonstats.com</h1>\n    <h4>Get qwikekonstats from World Bank API</h4>\n  </hgroup>\n);\n\nexport default Title;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Form from \"./components/Form\";\nimport StatsTable from \"./components/StatsTable\";\nimport Title from \"./components/Title\";\n\nconst TOKEN = \"7811b62367f018\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getStats();\n  }\n\n  state = {\n    countrycode: undefined,\n    countryname: undefined,\n    indicatorcode: undefined,\n    indicatorname: undefined,\n    startYear: undefined,\n    endYear: undefined,\n    stats: undefined,\n    error: undefined\n  };\n\n  getStats = async (e) => {\n\n    var country = \"AR\";\n    var indicator = undefined;\n    var y1 = undefined;\n    var y2 = undefined;\n\n    if (e) {\n      e.preventDefault();\n      country = e.target.elements.country.value;\n      indicator = e.target.elements.indicator.value;\n      y1 = e.target.elements.startYear.value;\n      y2 = e.target.elements.endYear.value;\n    } else {\n\n      var $ = require('jquery');\n      await $.getJSON(`https://ipinfo.io?token=${TOKEN}`, function(response) {\n        console.log(\"In success function\");\n        country = response.country;\n        indicator = 'SP.POP.TOTL';\n        y1 = 2008;\n        y2 = 2018;\n\n      });\n    }\n    console.log(\"Line 54\")\n    console.log(`country = ${country}`);\n    console.log(`indicator = ${indicator}`);\n    console.log(`y1 = ${y1}`);\n    console.log(`y2 = ${y2}`);\n\n    let res = undefined;\n\n    if (y2) {\n      res = await fetch(`https://api.worldbank.org/v2/country/${country}/indicator/${indicator}?date=${y1}:${y2}&format=json`);\n    } else {\n      res =  await fetch(`https://api.worldbank.org/v2/country/${country}/indicator/${indicator}?date=${y1}&format=json`);\n    }\n\n    const cjson = await res.json();\n    const rawdata = cjson[1];\n    console.log(`rawdata = ${rawdata}`);\n    console.log(rawdata)\n\n    if(rawdata){\n      var stats = {};\n\n      for( var elem of rawdata ){\n        stats[elem.date] = elem.value;\n      }\n    } else {\n      this.setState({\n        error: `No Data Available for ${country}!`,\n      })\n    }\n\n    if( country && indicator && stats ){\n      const indicatorname = rawdata[0].indicator.value;\n      const countryname = rawdata[0].country.value;\n      this.setState({\n        country: countryname,\n        indicator: indicatorname,\n        stats: stats,\n        error: \"\"\n      });\n    }\n    return;\n\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"main\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-xs-5 title-form-container\">\n                <Title />\n                <Form getStats={this.getStats} />\n                { this.state.error && <div className=\"err-msg\"> {this.state.error} </div>}\n              </div>\n              <div className=\"col-xs-7 table-container\">\n                { this.state.stats && <StatsTable country={this.state.country} indicator={this.state.indicator} stats={this.state.stats} /> }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}